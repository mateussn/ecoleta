{"ast":null,"code":"var _jsxFileName = \"/home/mateussn/www/nlw2/web/src/components/Dropzone/index.tsx\";\nimport React, { useCallback, useState } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { FiUpload } from 'react-icons/fi';\nimport './styles.css';\n\nconst Dropzone = () => {\n  const [selectedFileUrl, setSelectedFileUrl] = useState('');\n  const onDrop = useCallback(acceptedFiles => {\n    const file = acceptedFiles[0];\n    const fileUrl = URL.createObjectURL(file);\n    setSelectedFileUrl(fileUrl);\n  }, []);\n  const {\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    onDrop,\n    accept: 'image/*'\n  });\n  return /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    className: \"dropzone\"\n  }, getRootProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, getInputProps(), {\n    accept: \"image/*\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  })), selectedFileUrl ? /*#__PURE__*/React.createElement(\"img\", {\n    src: selectedFileUrl,\n    alt: \"Point thumbnail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 23\n    }\n  }) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FiUpload, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 29\n    }\n  }), \"Imagem do estabelecimento\"));\n};\n\nexport default Dropzone;","map":{"version":3,"sources":["/home/mateussn/www/nlw2/web/src/components/Dropzone/index.tsx"],"names":["React","useCallback","useState","useDropzone","FiUpload","Dropzone","selectedFileUrl","setSelectedFileUrl","onDrop","acceptedFiles","file","fileUrl","URL","createObjectURL","getRootProps","getInputProps","accept"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,WAAf,EAA4BC,QAA5B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,QAAT,QAAwB,gBAAxB;AAEA,OAAO,cAAP;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACnB,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCL,QAAQ,CAAC,EAAD,CAAtD;AAEA,QAAMM,MAAM,GAAGP,WAAW,CAACQ,aAAa,IAAI;AACxC,UAAMC,IAAI,GAAGD,aAAa,CAAC,CAAD,CAA1B;AAEA,UAAME,OAAO,GAAGC,GAAG,CAACC,eAAJ,CAAoBH,IAApB,CAAhB;AAEAH,IAAAA,kBAAkB,CAACI,OAAD,CAAlB;AACH,GANyB,EAMvB,EANuB,CAA1B;AAQA,QAAM;AAACG,IAAAA,YAAD;AAAeC,IAAAA;AAAf,MAAiCZ,WAAW,CAAE;AAChDK,IAAAA,MADgD;AAEhDQ,IAAAA,MAAM,EAAE;AAFwC,GAAF,CAAlD;AAKA,sBACI;AAAK,IAAA,SAAS,EAAG;AAAjB,KAAgCF,YAAY,EAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACI,+CAAWC,aAAa,EAAxB;AAA4B,IAAA,MAAM,EAAC,SAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ,EAGUT,eAAe,gBACX;AAAK,IAAA,GAAG,EAAEA,eAAV;AAA2B,IAAA,GAAG,EAAC,iBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADW,gBAGT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,8BANhB,CADJ;AAmBH,CAnCD;;AAqCA,eAAeD,QAAf","sourcesContent":["import React, {useCallback, useState} from 'react'\nimport { useDropzone } from 'react-dropzone'\nimport { FiUpload }from 'react-icons/fi';\n\nimport './styles.css';\n\nconst Dropzone = () => {\n    const [selectedFileUrl, setSelectedFileUrl] = useState('');\n\n    const onDrop = useCallback(acceptedFiles => {\n        const file = acceptedFiles[0];\n\n        const fileUrl = URL.createObjectURL(file);\n\n        setSelectedFileUrl(fileUrl);\n    }, [])\n\n    const {getRootProps, getInputProps } = useDropzone ({\n        onDrop,\n        accept: 'image/*'\n    })\n\n    return (\n        <div className = \"dropzone\" {...getRootProps()}>\n            <input {...getInputProps()} accept=\"image/*\" />\n\n                { selectedFileUrl\n                    ? <img src={selectedFileUrl} alt=\"Point thumbnail\" />\n                    : (\n                        <p>\n                            <FiUpload />\n                            Imagem do estabelecimento\n                        </p> \n                    )\n                \n                }\n\n                \n            \n        </div>\n    )\n}\n\nexport default Dropzone;"]},"metadata":{},"sourceType":"module"}